

def stretch():
    # Choregraphe bezier export in Python.
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([1.00000, 2.00000, 2.80000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[-0.02459, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [-0.00000, [3, -0.33333, -0.01222], [3, 0.26667, 0.00977]], [0.04138, [3, -0.26667, 0.00000], [3, 0.26667, 0.00000]], [0.00000, [3, -0.26667, 0.00000], [3, 0.23333, -0.00000]], [0.00000, [3, -0.23333, 0.00000], [3, 0.16667, -0.00000]], [0.00000, [3, -0.16667, 0.00000], [3, 0.26667, -0.00000]], [-0.51393, [3, -0.26667, 0.00000], [3, 0.30000, 0.00000]], [-0.30224, [3, -0.30000, -0.12958], [3, 0.30000, 0.12958]], [0.26354, [3, -0.30000, 0.00000], [3, 0.20000, 0.00000]], [0.12043, [3, -0.20000, 0.04549], [3, 0.20000, -0.04549]], [-0.00940, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [0.06592, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([1.00000, 2.00000, 2.80000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([[0.06285, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.00000, [3, -0.33333, 0.00000], [3, 0.26667, 0.00000]], [0.51490, [3, -0.26667, 0.00000], [3, 0.26667, 0.00000]], [-0.67200, [3, -0.26667, 0.00000], [3, 0.23333, 0.00000]], [0.00000, [3, -0.23333, -0.19854], [3, 0.16667, 0.14181]], [0.34907, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [0.17177, [3, -0.26667, 0.00000], [3, 0.30000, 0.00000]], [0.34511, [3, -0.30000, 0.00000], [3, 0.30000, 0.00000]], [0.01047, [3, -0.30000, 0.00000], [3, 0.20000, 0.00000]], [0.02967, [3, -0.20000, -0.01920], [3, 0.20000, 0.01920]], [0.37886, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [-0.03993, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([1.00000, 3.00000, 5.00000, 10.0000, 12.0000])
    keys.append([[1.0, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.0, [3, -0.33333, 0.00000], [3, 0.20000, 0.00000]], [-1.7, [3, -0.20000, 0.00000], [3, 0.33333, 0.00000]], [0.0, [3, -0.33333, 0.00000], [3, 0.23333, 0.00000]], [1.0, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([1.00000, 3.00000, 5.00000, 10.0000, 12.0000])
    keys.append([[1.0, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.0, [3, -0.33333, 0.00000], [3, 0.20000, 0.00000]], [-1.7, [3, -0.20000, 0.00000], [3, 0.33333, 0.00000]], [0.0, [3, -0.33333, 0.00000], [3, 0.23333, 0.00000]], [1.0, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]]])
    #names.append("LShoulderRoll")
    #times.append([1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.00000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    #keys.append([[0.98018, [3, -0.33333, 0.00000], [3, 0.33333, 0.00000]], [0.36652, [3, -0.33333, 0.02909], [3, 0.20000, -0.01745]], [0.34907, [3, -0.20000, 0.00000], [3, 0.33333, 0.00000]], [0.34907, [3, -0.33333, 0.00000], [3, 0.23333, 0.00000]], [0.36652, [3, -0.23333, 0.00000], [3, 0.16667, 0.00000]], [0.00870, [3, -0.16667, 0.00000], [3, 0.26667, 0.00000]], [0.29909, [3, -0.26667, -0.09658], [3, 0.13333, 0.04829]], [0.44331, [3, -0.13333, 0.00000], [3, 0.16667, 0.00000]], [0.07052, [3, -0.16667, 0.00000], [3, 0.30000, 0.00000]], [0.26687, [3, -0.30000, -0.08560], [3, 0.20000, 0.05706]], [0.49851, [3, -0.20000, 0.00000], [3, 0.20000, 0.00000]], [0.49851, [3, -0.20000, 0.00000], [3, 0.63333, 0.00000]], [0.21932, [3, -0.63333, 0.00000], [3, 0.00000, 0.00000]]])

   

    return names, times, keys